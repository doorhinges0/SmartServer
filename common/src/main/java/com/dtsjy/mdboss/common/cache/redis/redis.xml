<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd   
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd   
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<description>redis</description>
	
	<bean id="code2nameRedisRefresher" class="com.dtsjy.mdboss.common.cache.redis.refresh.Code2NameRedisRefresher"></bean>
	<bean id="interdefRedisRefresher" class="com.dtsjy.mdboss.common.cache.redis.refresh.InterfDefRedisRefresher"></bean>
	<bean id="tableConfigRedisRefresher" class="com.dtsjy.mdboss.common.cache.redis.refresh.TableConfigRedisRefresher"></bean>
	<bean id="commonConfigRedisRefresher" class="com.dtsjy.mdboss.common.cache.redis.refresh.CommonConfigRedisRefresher"></bean>
	
	<bean id="sharedRedisDataSource" class="com.dtsjy.mdboss.common.cache.redis.datasource.SharedRedisDataSourceImpl"></bean>
	<bean id="sharedRedisClientTemplate" class="com.dtsjy.mdboss.common.cache.redis.handler.SharedRedisClientTemplate"></bean>
	<bean id="sentinelRedisDataSource" class="com.dtsjy.mdboss.common.cache.redis.datasource.SentinelRedisDataSourceImpl"></bean>
	<bean id="sentinelRedisClientTemplate" class="com.dtsjy.mdboss.common.cache.redis.handler.SentinelRedisClientTemplate"></bean>
	
	<bean id="redisManager" class="com.dtsjy.mdboss.common.cache.redis.handler.DefaultRedisManager">
		<property name="keyResolverMap">
			<map>
				<entry key="default" value-ref="defaultKeyResolver" ></entry>
				<entry key="code2Name" value-ref="code2NameKeyResolver"></entry>
				<entry key="code2NameValueList" value-ref="code2NameValueListKeyResolver"></entry>
				<entry key="firstArg" value-ref="firstArgKeyResolver"></entry>
				<entry key="commonConfig" value-ref="commonConfigKeyResolver"></entry>
			</map>
		</property>
		<property name="valueResolverMap">
			<map>
				<entry key="default" value-ref="defaultValueResolver"></entry>
				<entry key="code2Name" value-ref="code2NameValueResolver"></entry>
				<entry key="code2NameValueList" value-ref="code2NameValueListValueResolver"></entry>
				<entry key="commonConfig" value-ref="commonConfigValueResolver"></entry>
			</map>
		</property>
		<property name="redisClientMap">
			<map>
				<entry key="default" value-ref="sentinelRedisClientTemplate"></entry>
				<entry key="code2Name" value-ref="sentinelRedisClientTemplate"></entry>
			</map>
		</property>
		<property name="redisRefresherMap">
			<map>
				<entry key="com.dtsjy.mdboss.ucp.dal.gen.model.DictItemVO" value-ref="code2nameRedisRefresher"></entry>
				<entry key="com.dtsjy.mdboss.ucp.dal.gen.model.InterfdefVO" value-ref="interdefRedisRefresher"></entry>
				<entry key="com.dtsjy.mdboss.ucp.dal.gen.model.TableConfigVO" value-ref="tableConfigRedisRefresher"></entry>
				<entry key="com.dtsjy.mdboss.ucp.dal.gen.model.TableColumnConfigVO" value-ref="tableConfigRedisRefresher"></entry>
				<entry key="com.dtsjy.mdboss.common.dal.gen.model.SysParamVO" value-ref="commonConfigRedisRefresher"></entry>
			</map>
		</property>
<!-- 		<property name="keyResolver" ref=""></property> -->
<!-- 		<property name="valueResolver" ref=""></property> -->
		<property name="redisClient" ref="sentinelRedisClientTemplate"></property>
	</bean>
	
<!-- KeyResolvers配置 begin-->
	<bean id="defaultKeyResolver" class="com.dtsjy.mdboss.common.cache.redis.keyresolver.DefaultKeyResolver">
<!-- 		<property name="keyOffSet" value="2"></property> -->
		<property name="keyIdx" value="0,1"></property>
<!-- 		<property name="fieldOffSet" value="2"></property> -->
<!-- 		<property name="fieldIdx" value="2"></property> -->
		<property name="group" value="default"></property>
	</bean>
	<bean id="code2NameKeyResolver" class="com.dtsjy.mdboss.common.cache.redis.keyresolver.Code2NameKeyResolver">
		<property name="group" value="code2Name"></property>
	</bean>
	<bean id="code2NameValueListKeyResolver" class="com.dtsjy.mdboss.common.cache.redis.keyresolver.Code2NameValueListKeyResolver">
		<property name="group" value="code2Name"></property>
	</bean>
	<bean id="firstArgKeyResolver" class="com.dtsjy.mdboss.common.cache.redis.keyresolver.FirstArgKeyResolver"></bean>
	<bean id="commonConfigKeyResolver" class="com.dtsjy.mdboss.common.cache.redis.keyresolver.CommonConfigKeyResolver">
		<property name="keyIdx" value="0,1,2,3"></property>
		<property name="group" value="commonConfig"></property>
	</bean>
<!-- KeyResolvers配置 end-->
	
<!-- ValueResolver配置 begin -->
	<bean id="defaultValueResolver" class="com.dtsjy.mdboss.common.cache.redis.valueresolver.DefaultValueResolver"></bean>
	<bean id="code2NameValueResolver" class="com.dtsjy.mdboss.common.cache.redis.valueresolver.Code2NameValueResolver"></bean>
	<bean id="code2NameValueListValueResolver" class="com.dtsjy.mdboss.common.cache.redis.valueresolver.Code2NameValueListValueResolver"></bean>
	<bean id="commonConfigValueResolver" class="com.dtsjy.mdboss.common.cache.redis.valueresolver.CommonConfigValueResolver"></bean>
<!-- ValueResolver配置 end -->
	
<!-- 连接池设置 begin-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="140" />
        <property name="maxIdle" value="140" />
        <property name="minIdle" value="40" />
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <!-- <property name="testWhileIdle" value="true"/> -->
    </bean>
    
    <bean id="sentinelPool" class="redis.clients.jedis.JedisSentinelPool">
		 <constructor-arg index="0" value="${sentinel.master}" />
		 <constructor-arg index="1">
			 <set>
			 	<value>${redis.server.1}</value>
			 	<value>${redis.server.2}</value>
			 	<value>${redis.server.3}</value>
			 	<value>${redis.server.4}</value>
			 </set>
		 </constructor-arg>
		 <constructor-arg index="2" ref="jedisPoolConfig" />
		 <constructor-arg index="3" value="2000" type="int"/>
		 <constructor-arg index="4" value="${redis.password}" />
		 <constructor-arg index="5" value="0" type="int"/>
	</bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis.server.shardinfo}" />
<!-- 					<constructor-arg index="0" value="192.168.102.129" /> -->
                    <constructor-arg name="name" value="mdboss" type="String"/>
                    <constructor-arg index="2" value="6379" type="int"/>
                    <constructor-arg index="3" value="6000" type="int"/>
                    <constructor-arg index="4" value="1" type="int"/>
                    <property name="password" value="${redis.password}"></property>
                </bean>
            </list>
        </constructor-arg>
    </bean>
<!-- 连接池设置 end--> 
   
<!-- 配置切面 begin-->
	<bean id="redisCacheAspect" class="com.dtsjy.mdboss.common.aspect.RedisCacheAspect">
		<property name="manager" ref="redisManager"></property> <!-- redis实现 -->
	</bean>
	<bean id="code2NameAspect" class="com.dtsjy.mdboss.common.aspect.Code2NameAspect">
		<property name="manager" ref="redisManager"></property> <!-- redis实现 -->
	</bean>
	<bean id="commonConfigAspect" class="com.dtsjy.mdboss.common.aspect.CommonConfigAspect">
		<property name="manager" ref="redisManager"></property> <!-- redis实现 -->
	</bean>
	<bean id="redisRefreshAspect" class="com.dtsjy.mdboss.common.aspect.RedisRefreshAspect">
		<property name="manager" ref="redisManager"></property> <!-- redis实现 -->
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="false"/> 
	
	<aop:config>
		<aop:pointcut expression="execution(public * com.dtsjy.mdboss.common.model.code2name.Code2NameFacade.*(..))"
			id="code2NameMethod" />
		<aop:pointcut expression="execution(public * com.dtsjy.mdboss.common.model.config.*Facade.query*(..)) or execution(public * com.dtsjy.mdboss.common.model.config.*Facade.get*(..))"
			id="commonConfigMethod" />
		<aop:pointcut expression="execution(public * com.dtsjy.mdboss.*.dal.gen.dao.*VOMapper.deleteBy*(..)) or execution(public * com.dtsjy.mdboss.*.dal.gen.dao.*VOMapper.insert*(..)) or execution(public * com.dtsjy.mdboss.*.dal.gen.dao.*VOMapper.updateBy*(..))"
			id="crudMethod" />
		
		<aop:aspect ref="redisRefreshAspect" order="1">
			<aop:around method="around" pointcut-ref="crudMethod" />
		</aop:aspect>
			
		<aop:aspect ref="code2NameAspect" order="1">
			<aop:around method="around" pointcut-ref="code2NameMethod" />
		</aop:aspect>
		<aop:aspect ref="commonConfigAspect" order="1">
			<aop:around method="around" pointcut-ref="commonConfigMethod" />
		</aop:aspect>
	</aop:config>
<!-- 配置切面 end-->
</beans>